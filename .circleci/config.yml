version: 2.1

orbs: 
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3

# resuable job code like functions in python
commands:
  print_pipeline_id:
    description: "A very simple command for printing pipeline id"
    parameters:
      id:
        type: string
        default: "123" 
    steps:
      - run: echo << parameters.id >>
      
  destroy_environment:
    description: "Destroys a stack"
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-b9beb3f

jobs:
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello,"

  save_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Save world output"
          command: echo " world!" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt

  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run:
          name: "Print world output"
          command: cat ~/output.txt

  print_id_from_command:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - print_pipeline_id:
          id: << pipeline.id >>

  print_var:
    docker:
      - image: cimg/base:2021.11
    steps:
      - checkout
      - run:
          name: "echo an env var that is part of our project"
          command: |
            echo $MY_NAME
            
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy --template-file infra.yml --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} --region us-east-1
      
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
              fingerprints: ["ba:9e:f8:f2:df:88:41:c0:73:31:9c:33:f4:0f:18:e0"] 
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory playbook.yml

  # Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Test job
          # Fail the job intentionally to simulate an error.
          command:  return 1
      - destroy_environment
        

workflows:
  my_workflow:
    jobs:
      - print_hello
      - save_world_output:
          requires: [print_hello]
      - print_output_file:
          requires: [save_world_output]
      - print_var
      - print_id_from_command:
          requires: [print_var]
      # - create_infrastructure
      - configure_infrastructure
      # - configure_infrastructure:
      #     requires: [create_infrastructure]
      - smoke_test:
          requires: [configure_infrastructure]
